[package]
name = "clippy_lints"
version = "0.1.77"
description = "A bunch of helpful lints to avoid common pitfalls in Rust"
repository = "https://github.com/rust-lang/rust-clippy"
readme = "README.md"
license = "MIT OR Apache-2.0"
keywords = ["clippy", "lint", "plugin"]
edition = "2021"



[dependencies]
arrayvec = { version = "0.7", default-features = false }
cargo_metadata = "0.15.3"
clippy_config = { path = "../clippy_config" }
clippy_utils = { path = "../clippy_utils" }
declare_clippy_lint = { path = "../declare_clippy_lint" }
itertools = "0.11"
quine-mc_cluskey = "0.2"
regex-syntax = "0.8"
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0", optional = true }
tempfile = { version = "3.3.0", optional = true }
toml = "0.7.3"
regex = { version = "1.5", optional = true }
unicode-normalization = "0.1"
unicode-script = { version = "0.5", default-features = false }
semver = "1.0"
rustc-semver = "1.1"
url = "2.2"

[dependencies.rustc_abi]
path = "/home/francis/CLionProjects/rust/compiler/rustc_abi"
optional = true

[dependencies.rustc_hir_analysis]
path = "/home/francis/CLionProjects/rust/compiler/rustc_hir_analysis"
optional = true

[dependencies.rustc_index]
path = "/home/francis/CLionProjects/rust/compiler/rustc_index"
optional = true

[dependencies.rustc_parse]
path = "/home/francis/CLionProjects/rust/compiler/rustc_parse"
optional = true

[dependencies.rustc_target]
path = "/home/francis/CLionProjects/rust/compiler/rustc_target"
optional = true

[dependencies.rustc_span]
path = "/home/francis/CLionProjects/rust/compiler/rustc_span"
optional = true

[dependencies.rustc_lint]
path = "/home/francis/CLionProjects/rust/compiler/rustc_lint"
optional = true

[dependencies.rustc_ast]
path = "/home/francis/CLionProjects/rust/compiler/rustc_ast"
optional = true

[dependencies.rustc_trait_selection]
path = "/home/francis/CLionProjects/rust/compiler/rustc_trait_selection"
optional = true

[dependencies.rustc_data_structures]
path = "/home/francis/CLionProjects/rust/compiler/rustc_data_structures"
optional = true

[dependencies.rustc_infer]
path = "/home/francis/CLionProjects/rust/compiler/rustc_infer"
optional = true

[dependencies.rustc_ast_pretty]
path = "/home/francis/CLionProjects/rust/compiler/rustc_ast_pretty"
optional = true

[dependencies.rustc_driver]
path = "/home/francis/CLionProjects/rust/compiler/rustc_driver"
optional = true

[dependencies.rustc_arena]
path = "/home/francis/CLionProjects/rust/compiler/rustc_arena"
optional = true

[dependencies.rustc_hir]
path = "/home/francis/CLionProjects/rust/compiler/rustc_hir"
optional = true

[dependencies.rustc_middle]
path = "/home/francis/CLionProjects/rust/compiler/rustc_middle"
optional = true

[dependencies.rustc_hir_typeck]
path = "/home/francis/CLionProjects/rust/compiler/rustc_hir_typeck"
optional = true

[dependencies.rustc_errors]
path = "/home/francis/CLionProjects/rust/compiler/rustc_errors"
optional = true

[dependencies.rustc_lexer]
path = "/home/francis/CLionProjects/rust/compiler/rustc_lexer"
optional = true

[dependencies.rustc_resolve]
path = "/home/francis/CLionProjects/rust/compiler/rustc_resolve"
optional = true

[dependencies.rustc_session]
path = "/home/francis/CLionProjects/rust/compiler/rustc_session"
optional = true

[dependencies.rustc_hir_pretty]
path = "/home/francis/CLionProjects/rust/compiler/rustc_hir_pretty"
optional = true

[dev-dependencies]
walkdir = "2.3"

[features]
deny-warnings = ["clippy_config/deny-warnings", "clippy_utils/deny-warnings"]
# build clippy with internal lints enabled, off by default
internal = ["serde_json", "tempfile", "regex"]
intellij = ["rustc_abi", "rustc_hir_analysis", "rustc_index", "rustc_parse", "rustc_target", "rustc_span", "rustc_lint", "rustc_ast", "rustc_trait_selection", "rustc_data_structures", "rustc_infer", "rustc_ast_pretty", "rustc_driver", "rustc_arena", "rustc_hir", "rustc_middle", "rustc_hir_typeck", "rustc_errors", "rustc_lexer", "rustc_resolve", "rustc_session", "rustc_hir_pretty", "clippy_utils/intellij"]

[package.metadata.rust-analyzer]
# This crate uses #[feature(rustc_private)]
rustc_private = true
